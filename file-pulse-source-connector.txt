{
  "name" : "FilePulseSourceConnector",
  "connector.class": "io.streamthoughts.kafka.connect.filepulse.source.FilePulseSourceConnector",
  "errors.log.include.messages": true,
  "filters.ParseDelimitedRow.autoGenerateColumnNames": false,
  "task.reader.class": "io.streamthoughts.kafka.connect.filepulse.reader.RowFileInputReader",
  "tasks.max": "1",
  "fs.scan.directory.path": "/home/appuser/tmp/files/directory/",
  "filters": "ParseDelimitedRow",
  "fs.scan.interval.ms": "10000",
  "offset.strategy": "name+hash",
  "file.filter.minimum.age.ms": "5000",
  "cleaner.output.failed.path": "/home/appuser/tmp/files/failed",
  "fs.scanner.class": "io.streamthoughts.kafka.connect.filepulse.scanner.local.LocalFSDirectoryWalker",
  "fs.cleanup.policy.class": "io.streamthoughts.kafka.connect.filepulse.clean.MoveCleanupPolicy",
  "fs.scan.filters": "io.streamthoughts.kafka.connect.filepulse.scanner.local.filter.RegexFileListFilter, io.streamthoughts.kafka.connect.filepulse.scanner.local.filter.IgnoreHiddenFileListFilter, io.streamthoughts.kafka.connect.filepulse.scanner.local.filter.LastModifiedFileListFilter",
  "filters.ParseDelimitedRow.type": "io.streamthoughts.kafka.connect.filepulse.filter.DelimitedRowFilter",
  "filters.ParseDelimitedRow.separator": "\\|",
  "filters.ParseDelimitedRow.extractColumnNam" : "headers",
  "topic": "FILE.PULSE",
  "filters.ParseDelimitedRow.trimColumn": true,
  "filters.ParseDelimitedRow.columns": "name:STRING;cpf:STRING;birthdate:STRING;",
  "internal.kafka.reporter.bootstrap.servers": "broker:29092",
  "errors.log.enable": true,
  "cleaner.output.succeed.path": "/home/appuser/tmp/files/succeed",
  "file.filter.regex.pattern": "FilePulseExample.\\\\*.txt"
}